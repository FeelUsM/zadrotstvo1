wiki переводчик с памятью переводов для разных текстов
переводчик на основе правил, 
	предоставляющий варианты выбора и делающий умные выборы вариантов по умолчанию (память переводов)
	правила которого могут менять и добавлять пользователи
		варианты выбора нужны чтобы нек. фразу в одном тексте переводить одним способом, а в другом - другим

=== вот его примерный алгоритм ===
1. распарсить синтаксис английского предложения (вопросы между словами, и ссылки от слов он, оно..., этот, эти...) 
(выбрать вариант (по умолчанию тот, у которого найдена самая частная фраза...))
2. найти англ. фразы 
	фраза - паттерн на структуру
		паттерн состоит из переменных (выражений) и константных слов.
		немного похоже на сопоставление с образцом в хаскеле или на БНФ
	с каждым англ. словом ассоциированы англ. фразы, в которых оно содержится (слово может встречаться во фразе несколько раз)
	поиск идет так: по каждому слову предложения проверяются все ассоциированные со словом фразы-паттерны на соответствие предложению в ~этих~ местах
	т.о. фразы могут перекрываться.
		вкл. одной фразы может запрещать доступ к другим фразам
предложение переводится стандартным алгоритмом, но, 
	если в нем найдены (и не отключены) фразы верхнего уровня, то они переводятся правилами этих фраз.
	эти фразы могут содержать выражения, которые переводятся стандартным алгоритмом, но,
		если в выражении найдутся фразы, то они будут переводится правилами этих фраз
		и т.д.
(выбрать фразы, которые хотим отключить, т.е. переводить не правилами этих фраз, 
	а по отдельности подфразы (если есть), и соединять их стандартным алгоритмом 
	(а подфразы - правилами этих подфраз (слово - частный случай фразы)) 
	и разрешить конфликты)
(при выборе по умолчанию
	если паттерн одной фразы полностью подходит под паттерн другой, 
	то используется более частная фраза,
	иначе это конфликт, который надо разрешать вручную, или какой-нибудь приоритет для фраз сделать...)
3. выполнить правила переводов фраз и дефолтный алгоритм перевода(вокруг фраз). Фразы могут быть вложены.
	каждое правило генерирует выражение на русском языке со структурой, т.ч. это выражение имеет тип (часть речи), и при его склонении/спряжении/...
	меняются окончания не только у главного слова, но и окончания у всех зависимых слов (напр. парное молоко, парного молока, парным молоком)
	в каждое правило передаются аргументы (могут отсутствовать) - переменные (выражения) из фраз
	одно и то же правило можно использовать в разных фразах, если в них одинаковые параметры (по количеству и типам)
	для одной фразы может быть несколько правил перевода
		правила могут быть невероятно простыми (например заменить англ. фразу без (под)выражений на определенную русскую)
			т.о. правило перевода фразы может задать даже начинающий пользователь
		правило может преобразовывать** подвыражения
		правило может варианты переводов исх. слова преобразовать** и попросить выбрать из преобразованных
(выбрать для каждой фразы, каким правилом ее переводить и слова/словосочетания по просьбе правил
	по умолчанию в данном тексте выбирается тот вариант, который выбирался раньше в данном тексте для данной фразы
!!!		это память переводов для данного текста
		ее можно наследовать/копировать из других текстов
	память переводов по возможности надо стараться отделить от текста
		но, скорее всего в некоторых случаях, от конкретных указаний, как какое предложение переводить, избавиться не получится
		но количество этих случаев надо свести к минимуму
> придумать формат памяти переводов и указаний к переводу предложений
	аналогичным образом определять классы css для фрагментов (например код), которые не надо переводить, 
		но комментарии и идентификаторы в комментариях - надо
)
4. (выбрать конечный порядок слов)
> придумать дефолтный алгоритм перевода и откалибровать на практике
	если какая-то фраза может переводиться не одним способом, 
	то это точно правила фразы, а не части дефолтного алгоритма

>> слабое место всего этого переводчика - это "умные" выборы вариантов по умолчанию, но я думаю, это тоже можно откалибровать на практике
	(главное - 1: предоставить все возможные варианты для выбора пользователем, 2: автоматизировать рутинные действия пользователя (память переводов уже большую часть автоматизирует)).
некоторая фраза может переводиться разными способами, но при этом все способы имеют один и тот же смысл
	тогда эти способы надо чередовать в случайном порядке, а в БД отметить их как взаимозаменяемые

=== БД: ===
англ. слова
	ссылки на фразы, в которых они содержатся (вычисляется автоматически)
англ. фразы (частный случай - англ. слова)
	ссылки на правила перевода
правила перевода
	ссылки на ру_слова (однозначные) и/или на ру_слова с уточнением смысла + взаимозаменяемость
русские слова с уточнением смысла
	ссылка на (слово, склонение) + ссылка на wiki
русские слова
	разные склонения/спряжения, + ссылка на wiktionary
	+ ссылка на wiki, возможно disambiguition (неоднозначное)
	
** есть определенные взаимосвязи между __ == атрибуты у __, ссылающиеся на __
	где __ - ру_слова (однозначные) и/или ру_слова с уточнением смысла
это нужно для замен (в правилах) типа: пикирующий<->который пикирует
каждое слово/фраза имеет тип: сущ., прил., глаг., подлежащее-сказуемое...
> надо проработать систему типов основанную на частях речи (начать с какой-то и откалибровать на практике)

=== как можно организовать ===
т.к. много чего будет калиброваться на практике, нужен язык, позволяющий легко это делать
например лисп или джаваскрипт 

перевод осуществлять в браузере пользователя(джаваскрипт), а на сервере хранить только БД
на клиент загружаются
	все англ. фразы, в которых встречаются слова текста.
	и (все русские слова (возможно с уточнением смысла) и русские слова, на которые ссылаются русские слова с уточнением смысла)
	которые используются в правилах, на которые ссылаются фразы
		или обновляются (в LocalStorage браузера) те которые уже загружены и были изменены другими пользователями
		запросы типа: 
			вот набор этих слов - загрузить, 
			набор этих слов - обновить с этого момента, 
			а набор этих слов - обновить с того момента.
		может быть стоит сформировать набор самых употребляемых слов, и не передавать в запросе все слова
			а только указание этого набора и последнюю дату его обновления.

> сделать скрипт (аналогичный mathjax), который можно будет встраивать в сайты, который будет 
	создавать GUI, 
	при выборе фраз и правил - обращаться серверу этого сайта за памятью переводов страниц с этого сайта
	давать возможность копировать/инициализоровать память переводов
	при редактировании фраз и правил - обращаться к вики-серверу фраз и правил
> сделать отдельный проэкт - хранилище памяти переводов любого сайта, 
	тексты можно идентифицировать при помощи URI, и память переводов для них хранить на общем для всего мира сервере
	GUI - аналог гугл-переводчика сайтов
	и, возможно в дальнейшем, плагины к браузерам, которые будут внедрять исх. код в код страниц
	на сайтах, где разным пользователям выдается один и тот же контент, 
		клиент может отправлять на сервер не список всех слов текста, а только его URL, 
		а на сервере уже будут закэшированы слова из того текста.

редактирование и хранение слов и фраз удобно привязать к вики-движку, у которого для каждого типа слов и фраз надо сделать 
	отдельный способ отображения и редактирования wisiwig (исходный код можно хранить например в JSON формате)

> научиться в своих скриптах получать доступ к википедии/викисловарю и к wiki-коду страниц от туда
> ? бежать кодить, или попытаться это попробовать вручную ?
изучить XAMPP, PHP, mediawiki
добавить страничку, с которой можно будет слать любые XHR запросы к БД mediawiki
начать прорабатывать систему типов и добавлять GUI в mediawiki
начать добавлять фразы-слова и правила к ним
начать делать дефолтный алгоритм (с примитивным GUI-ем), и иногда добавлять более сложные фразы, 
начать делать хранилище памяти переводов с GUI-ем как у гугла, внутри - скрипт, который можно было бы встраивать в другие сайты
начать сайтам предлагать встраивать переводчик к себе для рекламы переводчика
...
profit
...
начать сайтам предлагать встраивать переводчик к себе, и хранить память переводов у себя (для уменьшения нагрузки на общий сервер памяти переводов) 


гранты википедии!!!
